{
	"name": "ui5plugin",
	"displayName": "SAPUI5 Extension",
	"description": "Extension for working with UI5 projects",
	"version": "0.12.71",
	"publisher": "iljapostnovs",
	"author": "Ilja Postnovs <ilja.postnovs@gmail.com>",
	"license": "Apache-2.0",
	"contributors": [
		"Ilja Postnovs <ilja.postnovs@gmail.com>"
	],
	"repository": {
		"type": "git",
		"url": "https://github.com/iljapostnovs/VSCodeUI5Plugin.git"
	},
	"bugs": {
		"url": "https://github.com/iljapostnovs/VSCodeUI5Plugin/issues"
	},
	"icon": "images/ui5.png",
	"homepage": "https://github.com/iljapostnovs/VSCodeUI5Plugin/blob/master/README.md",
	"engines": {
		"vscode": "^1.58.1"
	},
	"categories": [
		"Extension Packs"
	],
	"activationEvents": [
		"*"
	],
	"keywords": [
		"ui5",
		"fiori",
		"sap"
	],
	"contributes": {
		"views": {
			"explorer": [
				{
					"id": "ui5Explorer",
					"name": "UI5 Explorer"
				}
			]
		},
		"menus": {
			"view/title": [
				{
					"command": "ui5plugin.refreshClassTree",
					"when": "view == ui5Explorer",
					"group": "navigation"
				},
				{
					"command": "ui5plugin.expandClassTree",
					"when": "view == ui5Explorer",
					"group": "navigation"
				}
			]
		},
		"jsonValidation": [
			{
				"fileMatch": [
					"**/manifest.json"
				],
				"url": "https://raw.githubusercontent.com/SAP/ui5-manifest/master/schema.json"
			}
		],
		"keybindings": [
			{
				"command": "editor.action.quickFix",
				"key": "alt+enter"
			},
			{
				"command": "ui5plugin.insertCustomClassName",
				"key": "f6"
			},
			{
				"command": "ui5plugin.moveDefineToFunctionParameters",
				"key": "f5"
			},
			{
				"command": "ui5plugin.switchBetweenVC",
				"key": "f3"
			},
			{
				"command": "ui5plugin.exportToi18n",
				"key": "f4"
			}
		],
		"configuration": {
			"title": "SAPUI5 Plugin",
			"properties": {
				"ui5.plugin.excludeFolderPattern": {
					"description": "Pattern which shows what should be excluded from search. Useful if you have local SAPUI5 libraries or node modules in your workspace. See glob npm package -> ignore option",
					"type": "array",
					"items": {
						"type": "string",
						"title": "Exclude pattern",
						"pattern": "^.+$"
					},
					"default": [
						"**/resources/**",
						"**/dist/**/**",
						"**/node_modules/**"
					]
				},
				"ui5.plugin.ui5version": {
					"type": "string",
					"default": "1.60.11",
					"pattern": "^1\\.[0-9]{2}\\.[0-9]{1,2}$",
					"description": "SAPUI5 Library version for lib metadata preload"
				},
				"ui5.plugin.jsCodeLens": {
					"type": "boolean",
					"default": true,
					"description": "Should javascript CodeLens be enabled"
				},
				"ui5.plugin.jsReferenceCodeLens": {
					"type": "boolean",
					"default": true,
					"description": "Should javascript Reference CodeLens be enabled"
				},
				"ui5.plugin.xmlCodeLens": {
					"type": "boolean",
					"default": true,
					"description": "Should xml CodeLens be enabled"
				},
				"ui5.plugin.signatureHelp": {
					"type": "boolean",
					"default": true,
					"description": "Should UI5 Signature Help be enabled"
				},
				"ui5.plugin.xmlDiagnostics": {
					"type": "boolean",
					"default": true,
					"description": "Should UI5 XML Diagnostics be enabled"
				},
				"ui5.plugin.jsDiagnostics": {
					"type": "boolean",
					"default": true,
					"description": "Should UI5 JS Diagnostics be enabled"
				},
				"ui5.plugin.useWrongFieldMethodLinter": {
					"type": "boolean",
					"default": true,
					"description": "JS Linter: Should Wrong Field and Method validator be used. It checks if used fields and methods exists and if they are used correctly according to access level modifiers."
				},
				"ui5.plugin.useWrongClassNameLinter": {
					"type": "boolean",
					"default": true,
					"description": "JS Linter: Should Wrong UI5 Class Name validator be used. It checks if class path which is provided in <class>.extend(\"here\", ... is correct"
				},
				"ui5.plugin.useWrongImportLinter": {
					"type": "boolean",
					"default": true,
					"description": "JS Linter: Should Wrong SAP UI Define Import validator be used. It checks if sap.ui.define imports have corresponding classes."
				},
				"ui5.plugin.useWrongParametersLinter": {
					"type": "boolean",
					"default": true,
					"description": "JS Linter: Should Wrong method parameters validator be used. It checks if parameter quantity and data types are consistent."
				},
				"ui5.plugin.useUnusedMemberLinter": {
					"type": "boolean",
					"default": true,
					"description": "JS Linter: Should unused method/field validator be used. It checks if class members (fields and methods) are used."
				},
				"ui5.plugin.useWrongFilePathLinter": {
					"type": "boolean",
					"default": true,
					"description": "JS Linter: Should wrong file path validator be used. It checks if paths has corresponding file, e.g. com.test.TestFragment should have ./webapp/TestFragment.fragment.xml"
				},
				"ui5.plugin.usePublicMemberLinter": {
					"type": "boolean",
					"default": true,
					"description": "JS Linter: Should public member validator be used. It will check if public members probably should be private."
				},
				"ui5.plugin.useWrongOverrideLinter": {
					"type": "boolean",
					"default": true,
					"description": "JS Linter: Should wrong override validator be used. It will check if private members are not overriden."
				},
				"ui5.plugin.moveDefineToFunctionParametersOnAutocomplete": {
					"type": "boolean",
					"default": true,
					"description": "Should sap.ui.define class names be moved to function parameters on sap.ui.define autocomplition"
				},
				"ui5.plugin.codeGeneratorStrategy": {
					"type": "string",
					"enum": [
						"ES5",
						"ES6"
					],
					"default": "ES5",
					"description": "Strategy which should be used for code generation. E.g. you will get 'var' with ES5 strategy and 'let' with ES6 strategy when using override completion items."
				},
				"ui5.plugin.libsToLoad": {
					"type": "array",
					"default": [
						"sap.m",
						"sap.ui.comp",
						"sap.f",
						"sap.ui.core",
						"sap.ui.commons",
						"sap.ui.export",
						"sap.ui.layout",
						"sap.ui.support",
						"sap.ui.table",
						"sap.ui.unified",
						"sap.ushell",
						"sap.tnt",
						"sap.suite.ui.microchart"
					],
					"description": "List of libs to be loaded"
				},
				"ui5.plugin.UMLDiagramGenerationStrategy": {
					"type": "string",
					"enum": [
						"DrawIO",
						"PlantUML"
					],
					"default": "PlantUML",
					"description": "Which format should be used for UML diagram generation"
				},
				"ui5.plugin.addI18nTextLengthLimitation": {
					"type": "boolean",
					"default": true,
					"description": "Should text length be added to i18n text id (e.g. #YMSG,14)"
				},
				"ui5.plugin.textTransformationStrategy": {
					"type": "string",
					"enum": [
						"Pascal Case",
						"Snake Upper Case"
					],
					"default": "Pascal Case",
					"description": "Case type which should be used for i18n text id proposal"
				},
				"ui5.plugin.askUserToConfirmI18nId": {
					"type": "boolean",
					"default": true,
					"description": "Should user confirm proposed i18n id"
				},
				"ui5.plugin.addInheritedPropertiesAndAggregations": {
					"type": "boolean",
					"default": false,
					"description": "Should inherited properties/aggregations be added in XML completion items"
				},
				"ui5.plugin.addTagAttributes": {
					"type": "boolean",
					"default": true,
					"description": "Should tag attributes be added in XML completion items"
				},
				"ui5.plugin.addTagAggregations": {
					"type": "boolean",
					"default": true,
					"description": "Should tag aggregations be added in XML completion items"
				},
				"ui5.plugin.dataSource": {
					"type": "string",
					"default": "https://ui5.sap.com/",
					"description": "UI5 metadata source URL"
				},
				"ui5.plugin.rejectUnauthorized": {
					"type": "boolean",
					"default": true,
					"description": "Data source related property. If true, the server certificate is verified against the list of supplied CAs. Verification happens at the connection level, before the HTTP request is sent."
				},
				"ui5.plugin.JSLinterExceptions": {
					"type": "array",
					"items": {
						"type": "object",
						"title": "Class name and method name. \"*\" for wild card",
						"properties": {
							"className": {
								"type": "string",
								"description": "Name of the class. Use \"*\" for wild card"
							},
							"memberName": {
								"type": "string",
								"description": "Name of the method/field. Use \"*\" for wild card"
							},
							"applyToChildren": {
								"type": "boolean",
								"description": "If the rule should be applied to class children (classes which extends this class)",
								"default": false
							}
						}
					},
					"default": [
						{
							"className": "sap.ui.core.Element",
							"memberName": "getDomRef",
							"applyToChildren": true
						},
						{
							"className": "sap.ui.model.json.JSONModel",
							"memberName": "iSizeLimit",
							"applyToChildren": true
						},
						{
							"className": "sap.ui.model.Binding",
							"memberName": "*"
						},
						{
							"className": "sap.ui.model.Model",
							"memberName": "*"
						},
						{
							"className": "sap.ui.core.Element",
							"memberName": "*"
						},
						{
							"className": "sap.ui.base.ManagedObject",
							"memberName": "*"
						},
						{
							"className": "sap.ui.core.Control",
							"memberName": "*"
						},
						{
							"className": "sap.ui.xmlfragment",
							"memberName": "*"
						},
						{
							"className": "*",
							"memberName": "byId"
						},
						{
							"className": "*",
							"memberName": "prototype"
						},
						{
							"className": "*",
							"memberName": "call"
						},
						{
							"className": "*",
							"memberName": "apply"
						},
						{
							"className": "*",
							"memberName": "bind"
						},
						{
							"className": "*",
							"memberName": "constructor"
						},
						{
							"className": "*",
							"memberName": "init"
						},
						{
							"className": "*",
							"memberName": "exit"
						},
						{
							"className": "map",
							"memberName": "*"
						}
					],
					"description": "Array of objects of exceptions for JS Linter. Added exceptions will not be checked by Unused Method Linter and Wrong Field/Method Linter."
				}
			}
		},
		"commands": [
			{
				"command": "ui5plugin.refreshClassTree",
				"title": "UI5: Refresh class tree",
				"icon": {
					"light": "icons/light/refresh.svg",
					"dark": "icons/dark/refresh.svg"
				}
			},
			{
				"command": "ui5plugin.expandClassTree",
				"title": "UI5: Expand class tree",
				"icon": {
					"light": "icons/light/expand-all.svg",
					"dark": "icons/dark/expand-all.svg"
				}
			},
			{
				"command": "ui5plugin.moveDefineToFunctionParameters",
				"title": "UI5: Move sap.ui.define to parameters"
			},
			{
				"command": "ui5plugin.switchBetweenVC",
				"title": "UI5: Switch View/Controller"
			},
			{
				"command": "ui5plugin.clearCache",
				"title": "UI5: Clear Cache"
			},
			{
				"command": "ui5plugin.exportToi18n",
				"title": "UI5: Export to i18n"
			},
			{
				"command": "ui5plugin.insertCustomClassName",
				"title": "UI5: Insert Custom Class name"
			},
			{
				"command": "ui5plugin.generateUMLClassDiagram",
				"title": "UI5: Generate UML Class diagram for current document"
			},
			{
				"command": "ui5plugin.generateUMLClassDiagramsForWholeProject",
				"title": "UI5: Generate UML Class diagram for whole project"
			},
			{
				"command": "ui5plugin.generateERDiagramFromMetadata",
				"title": "UI5: Generate ER diagram from metadata.xml"
			}
		]
	},
	"main": "./dist/extension.js",
	"scripts": {
		"vscode:prepublish": "webpack --mode production",
		"webpack": "webpack --mode development",
		"webpack-dev": "webpack --mode development --watch",
		"compile": "webpack --mode none",
		"compilets": "npx tsc",
		"lint": "tslint -p ./",
		"test": "node ./dist/test/TestRunner.js",
		"pretest": "npm run compilets",
		"watch": "npm run compilets",
		"install_ext": "vsce package && PowerShell -Command \"code --install-extension $(node -p -e '`ui5plugin-` + require(`./package.json`).version + `.vsix`')\""
	},
	"devDependencies": {
		"@types/axios": "^0.14.0",
		"@types/glob": "^7.1.4",
		"@types/line-column": "^1.0.0",
		"@types/mocha": "^8.2.3",
		"@types/node": "^14.17.5",
		"@types/vscode": "^1.58.1",
		"@types/webpack": "^5.28.0",
		"@typescript-eslint/eslint-plugin": "^4.28.4",
		"@typescript-eslint/parser": "^4.28.4",
		"clean-webpack-plugin": "^3.0.0",
		"eslint": "^7.31.0",
		"mocha": "^9.0.2",
		"ts-loader": "^9.2.3",
		"typescript": "^4.3.5",
		"vscode-test": "^1.6.1",
		"webpack": "^5.45.1",
		"webpack-cli": "^4.7.2"
	},
	"dependencies": {
		"acorn-loose": "^8.1.0",
		"axios": "^0.21.1",
		"comment-parser": "^1.1.5",
		"fast-xml-parser": "^3.19.0",
		"glob": "^7.1.7",
		"line-column": "^1.0.2"
	}
}