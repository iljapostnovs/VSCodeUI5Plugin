{
	"name": "ui5plugin",
	"displayName": "SAPUI5 Extension",
	"description": "Extension for working with UI5 projects",
	"version": "1.8.2",
	"publisher": "iljapostnovs",
	"author": "Ilja Postnovs <ilja.postnovs@gmail.com>",
	"license": "Apache-2.0",
	"contributors": [
		"Ilja Postnovs <ilja.postnovs@gmail.com>"
	],
	"repository": {
		"type": "git",
		"url": "https://github.com/iljapostnovs/VSCodeUI5Plugin.git"
	},
	"bugs": {
		"url": "https://github.com/iljapostnovs/VSCodeUI5Plugin/issues"
	},
	"sponsor": {
		"url": "https://github.com/sponsors/iljapostnovs"
	},
	"icon": "images/ui5.png",
	"homepage": "https://github.com/iljapostnovs/VSCodeUI5Plugin/blob/master/README.md",
	"engines": {
		"vscode": "^1.76.0"
	},
	"categories": [
		"Extension Packs"
	],
	"activationEvents": [
		"onStartupFinished"
	],
	"keywords": [
		"ui5",
		"openui5",
		"sapui5",
		"fiori",
		"linter",
		"sap"
	],
	"contributes": {
		"views": {
			"explorer": [
				{
					"id": "ui5Explorer",
					"name": "UI5 Explorer"
				}
			]
		},
		"menus": {
			"view/title": [
				{
					"command": "ui5plugin.refreshClassTree",
					"when": "view == ui5Explorer",
					"group": "navigation"
				},
				{
					"command": "ui5plugin.expandClassTree",
					"when": "view == ui5Explorer",
					"group": "navigation"
				}
			]
		},
		"jsonValidation": [
			{
				"fileMatch": [
					"**/manifest.json"
				],
				"url": "https://raw.githubusercontent.com/SAP/ui5-manifest/master/schema.json"
			},
			{
				"fileMatch": [
					"**/package.json",
					"**/.ui5pluginrc",
					"**/.ui5pluginrc.json"
				],
				"url": "./schema/packageSchema.json"
			}
		],
		"keybindings": [
			{
				"command": "editor.action.quickFix",
				"key": "alt+enter"
			},
			{
				"command": "ui5plugin.insertCustomClassName",
				"key": "f6"
			},
			{
				"command": "ui5plugin.moveDefineToFunctionParameters",
				"key": "f5"
			},
			{
				"command": "ui5plugin.switchBetweenVC",
				"key": "f3"
			},
			{
				"command": "ui5plugin.exportToi18n",
				"key": "f4"
			}
		],
		"configuration": {
			"title": "SAPUI5 Plugin",
			"properties": {
				"ui5.plugin.jsCodeLens": {
					"type": "boolean",
					"default": true,
					"description": "Should javascript CodeLens be enabled"
				},
				"ui5.plugin.jsReferenceCodeLens": {
					"type": "boolean",
					"default": true,
					"description": "Should javascript Reference CodeLens be enabled"
				},
				"ui5.plugin.xmlCodeLens": {
					"type": "boolean",
					"default": true,
					"description": "Should xml CodeLens be enabled"
				},
				"ui5.plugin.propertiesCodeLens": {
					"type": "boolean",
					"default": true,
					"description": "Should properties CodeLens be enabled"
				},
				"ui5.plugin.signatureHelp": {
					"type": "boolean",
					"default": true,
					"description": "Should UI5 Signature Help be enabled"
				},
				"ui5.plugin.moveDefineToFunctionParametersOnAutocomplete": {
					"type": "boolean",
					"default": true,
					"description": "Should sap.ui.define class names be moved to function parameters on sap.ui.define autocomplition"
				},
				"ui5.plugin.codeGeneratorStrategy": {
					"type": "string",
					"enum": [
						"ES5",
						"ES6"
					],
					"default": "ES5",
					"description": "Strategy which should be used for code generation. E.g. you will get 'var' with ES5 strategy and 'let' with ES6 strategy when using override completion items."
				},
				"ui5.plugin.UMLDiagramGenerationStrategy": {
					"type": "string",
					"enum": [
						"DrawIO",
						"PlantUML"
					],
					"default": "PlantUML",
					"description": "Which format should be used for UML diagram generation"
				},
				"ui5.plugin.addI18nTextLengthLimitation": {
					"type": "boolean",
					"default": true,
					"description": "Should text length be added to i18n text id (e.g. #YMSG,14)"
				},
				"ui5.plugin.textTransformationStrategy": {
					"type": "string",
					"enum": [
						"Pascal Case",
						"Snake Upper Case"
					],
					"default": "Pascal Case",
					"description": "Case type which should be used for i18n text id proposal"
				},
				"ui5.plugin.askUserToConfirmI18nId": {
					"type": "boolean",
					"default": true,
					"description": "Should user confirm proposed i18n id"
				},
				"ui5.plugin.addInheritedPropertiesAndAggregations": {
					"type": "boolean",
					"default": false,
					"description": "Should inherited properties/aggregations be added in XML completion items"
				},
				"ui5.plugin.addTagAttributes": {
					"type": "boolean",
					"default": true,
					"description": "Should tag attributes be added in XML completion items"
				},
				"ui5.plugin.addTagAggregations": {
					"type": "boolean",
					"default": true,
					"description": "Should tag aggregations be added in XML completion items"
				},
				"ui5.plugin.tsEventModule": {
					"type": "string",
					"description": "Event module for Typescript, which will be used when creating event handler from XML",
					"default": "sap/ui/base/Event"
				},
				"ui5.plugin.tsEventType": {
					"type": "string",
					"description": "Event type for Typescript, which will be used when creating event handler from XML. (e.g. type of oEvent: 'Event'). There are three possible optional variables used for replacing: classModule, className, eventName. Example: if the value for this property is Event<\"{classModule}\", \"{eventName}\">, and you are inserting change event from sap.m.Table, the result will be 'oEvent: Event<\"sap/m/Table\", \"change\">'",
					"default": "Event"
				},
				"ui5.plugin.insertManagedObjectModule": {
					"type": "string",
					"description": "Module which will be used for automatic insertion on custom class creation",
					"default": "sap/ui/base/ManagedObject"
				},
				"ui5.plugin.insertControllerModule": {
					"type": "string",
					"description": "Module which will be used for automatic insertion on custom controller creation",
					"default": "sap/ui/core/mvc/Controller"
				},
				"ui5.plugin.xmlFormatterTagEndingNewline": {
					"type": "boolean",
					"default": true,
					"description": "Should XML Formatter put tag ending (\">\", \"/>\") in newline"
				},
				"ui5.plugin.umlGenerationPath": {
					"type": "string",
					"default": "",
					"markdownDescription": "Path for file generated by `UI5: Generate UML Class diagram for whole project` command. Relative to project folder. Example: `../diagram/ClassDiagram.pu`"
				},
				"ui5.plugin.XMLFileInterfacePath": {
					"type": "string",
					"default": "",
					"markdownDescription": "Path for file generated by `UI5: (TS) Generate types for XML files (id to class mapping)` command. Relative to project folder. Example: `./types/ViewFragmentIds.d.ts`"
				},
				"ui5.plugin.generateXMLFileInterfacesOnSave": {
					"type": "boolean",
					"default": false,
					"title": "Generate types for XML files on save",
					"markdownDescription": "Should `UI5: (TS) Generate types for XML files (id to class mapping)` command be executed on XML file save or not. Works only if `ui5.plugin.XMLFileInterfacePath` is set. Works only for TS projects."
				},
				"ui5.plugin.TSODataInterfacesPath": {
					"type": "string",
					"default": "",
					"markdownDescription": "Path for file generated by `UI5: (TS) Generate interfaces for OData entities` command. Relative to project folder. Example: `./types/ODataTypes.d.ts`"
				},
				"ui5.plugin.TSODataInterfacesFetchingData": {
					"type": "object",
					"default": {},
					"properties": {
						"username": {
							"type": "string"
						},
						"password": {
							"type": "string"
						},
						"url": {
							"type": "string"
						}
					},
					"markdownDescription": "URL, username and password for `UI5: (TS) Generate interfaces for OData entities` command."
				},
				"ui5.plugin.massTSODataInterfacesFetchingData": {
					"type": "array",
					"default": [],
					"items": {
						"type": "object",
						"default": {},
						"properties": {
							"username": {
								"type": "string"
							},
							"password": {
								"type": "string"
							},
							"url": {
								"type": "string",
								"description": "URL to metadata"
							},
							"path": {
								"type": "string",
								"description": "Path for file where result will be put. Relative to project folder. Example: `./types/ODataTypes.d.ts`"
							}
						}
					},
					"markdownDescription": "Array of URL, username and password for `UI5: (TS) Generate interfaces for OData entities` command (Mass)."
				},
				"ui5.plugin.ERDiagramPath": {
					"type": "string",
					"default": "",
					"markdownDescription": "Path for file generated by `UI5: Generate ER diagram from metadata.xml` command. Relative to project folder. Example: `../diagram/ERDiagram.pu`"
				},
				"ui5.plugin.JSTypeDefDocPath": {
					"type": "string",
					"default": "",
					"markdownDescription": "Path for file generated by `UI5: Generate JS typedef JSDoc from metadata` command. Relative to project folder. Example: `./model/ModelTypedef.js`"
				},
				"ui5.plugin.globalConfigurationPath": {
					"type": "string",
					"default": "",
					"markdownDescription": "Absolute path to global `any_file.json` configuration file, which is used by `UI5 Parser` and `UI5 Linter`. Priority of ui5 config determination: local `package.json` -> global `any_file.json` -> default value. Example: `C:\\Users\\MyUser\\Documents\\ui5config.json`"
				}
			}
		},
		"commands": [
			{
				"command": "ui5plugin.refreshClassTree",
				"title": "UI5: Refresh class tree",
				"icon": {
					"light": "icons/light/refresh.svg",
					"dark": "icons/dark/refresh.svg"
				}
			},
			{
				"command": "ui5plugin.expandClassTree",
				"title": "UI5: Expand class tree",
				"icon": {
					"light": "icons/light/expand-all.svg",
					"dark": "icons/dark/expand-all.svg"
				}
			},
			{
				"command": "ui5plugin.generateJSTypeDefDocFromMetadata",
				"title": "UI5: Generate JS typedef JSDoc from metadata"
			},
			{
				"command": "ui5plugin.moveDefineToFunctionParameters",
				"title": "UI5: Move sap.ui.define to parameters"
			},
			{
				"command": "ui5plugin.switchBetweenVC",
				"title": "UI5: Switch View/Controller"
			},
			{
				"command": "ui5plugin.clearCache",
				"title": "UI5: Clear Cache"
			},
			{
				"command": "ui5plugin.exportToi18n",
				"title": "UI5: Export to i18n"
			},
			{
				"command": "ui5plugin.insertCustomClassName",
				"title": "UI5: Insert Custom Class name"
			},
			{
				"command": "ui5plugin.generateUMLClassDiagram",
				"title": "UI5: Generate UML Class diagram for current document"
			},
			{
				"command": "ui5plugin.generateUMLClassDiagramsForWholeProject",
				"title": "UI5: Generate UML Class diagram for whole project"
			},
			{
				"command": "ui5plugin.generateERDiagramFromMetadata",
				"title": "UI5: Generate ER diagram from metadata.xml"
			},
			{
				"command": "ui5plugin.generateTSXMLFileInterfaces",
				"title": "UI5: (TS) Generate types for XML files (id to class mapping)"
			},
			{
				"command": "ui5plugin.generateTSODataInterfaces",
				"title": "UI5: (TS) Generate interfaces for OData entities"
			},
			{
				"command": "ui5plugin.generateMassTSODataInterfaces",
				"title": "UI5: (TS) Generate interfaces for OData entities (Mass)"
			}
		]
	},
	"main": "./dist/extension.js",
	"scripts": {
		"vscode:prepublish": "npx webpack --mode production",
		"webpack": "npx webpack --mode development",
		"webpack-dev": "npx webpack --mode development --watch",
		"compile": "npx webpack --mode none",
		"compilets": "npx tsc",
		"lint": "eslint src",
		"test:js": "node ./dist/test/js/TestRunner.js",
		"test:ts": "node ./dist/test/ts/TestRunner.js",
		"test:ws:multijs": "node ./dist/test/ws/TestRunnerMultiJS.js",
		"test:ws:multits": "node ./dist/test/ws/TestRunnerMultiTS.js",
		"pretest:js": "npm run compilets",
		"pretest:ts": "npm run compilets && cd ./src/test/ts/project && npm install",
		"pretest:ws:multijs": "npm run compilets",
		"pretest:ws:multits": "npm run compilets && cd ./src/test/ws/project/mix/multits/app1 && npm install && cd ../app2 && npm install",
		"watch": "npm run compilets",
		"install_ext": "vsce package && PowerShell -Command \"code --install-extension $(node -p -e '`ui5plugin-` + require(`./package.json`).version + `.vsix`')\""
	},
	"devDependencies": {
		"@types/glob": "^8.1.0",
		"@types/line-column": "^1.0.0",
		"@types/mocha": "^10.0.1",
		"@types/node": "^18.15.11",
		"@types/vscode": "^1.76.0",
		"@types/webpack": "^5.28.1",
		"@typescript-eslint/eslint-plugin": "^5.57.0",
		"@typescript-eslint/parser": "^5.57.0",
		"@vscode/test-electron": "^2.3.0",
		"axios": "^1.3.4",
		"clean-webpack-plugin": "^4.0.0",
		"eslint": "^8.36.0",
		"mocha": "^10.2.0",
		"ts-loader": "^9.4.2",
		"webpack": "^5.76.3",
		"webpack-cli": "^5.0.1"
	},
	"dependencies": {
		"acorn-loose": "^8.3.0",
		"comment-parser": "^1.3.1",
		"fast-xml-parser": "^4.1.3",
		"glob": "^9.3.2",
		"line-column": "^1.0.2",
		"ts-morph": "^18.0.0",
		"typescript": "5.0.2",
		"ui5plugin-linter": "^1.7.3",
		"ui5plugin-parser": "^1.5.3"
	},
	"__metadata": {
		"id": "7a9177b5-9a33-478d-bff3-879dc393cb43",
		"publisherDisplayName": "Ilja Postnovs",
		"publisherId": "ec65c605-dbb1-4486-bd8a-a99b8c9e30da",
		"isPreReleaseVersion": false
	}
}
